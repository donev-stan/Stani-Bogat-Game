@use "../abstracts/index.scss" as *;

.play-panel {
	display: none;
	width: 100%;

	.container {
		display: flex;
		flex-direction: column;

		padding-top: 20px;

		background-image: url("../../../images/background.jpg");
		background-position: 47% 0%;

		.upper-box {
			display: flex;
			gap: 150px;
			flex: 2;
			margin-bottom: 30px;

			.timer-box {
				display: flex;
				flex-direction: column;
				gap: 150px;
				align-items: center;
				width: 300px;
				animation: enterTimerAndExitBtn 1s ease 0s 1 normal none;

				.stop-game-btn-box {
					display: flex;
					justify-content: center;
					align-items: flex-start;
					padding-top: 40px;

					width: 100%;

					#stop-game-btn {
						width: 195px;
						height: 42px;

						border: none;
						background: transparent;

						@include backgroundImage("../../../images/button.png");
						@include buttonRadius;

						font-size: 1rem;
						font-weight: bold;
						color: white;

						text-shadow: $textShadow;

						&:hover {
							cursor: pointer;
						}
					}
				}

				.inner-timer-box {
					display: flex;
					justify-content: center;
					align-items: center;

					color: white;

					width: 65%;
					height: 190px;

					.timer-img {
						width: 100%;
						animation: timerAnimation 20s linear 0s infinite normal forwards;
					}

					#timer-text {
						font-size: 1.5rem;
						font-weight: bold;
						text-align: center;
						position: absolute;
					}
				}
			}

			.middle-box {
				flex: 2;
				display: flex;
				flex-direction: column;

				.hints {
					display: flex;
					justify-content: center;
					gap: 20px;
					margin: 30px 0;

					animation: enterHints 1s ease 0s 1 normal none;

					.hint {
						position: relative;

						.hint-askAudience,
						.hint-fiftyFifty,
						.hint-callAfriend {
							cursor: pointer;
							border-radius: 50%;

							&:hover {
								animation: hoverHint 1s cubic-bezier(0.11, 0, 0.5, 0) 0s infinite normal none;
							}
						}

						.hint-taken {
							position: absolute;
							top: 5px;
							left: 1px;
							width: 90px;

							border-radius: 50%;
							// margin: -8px 0 0 -9px;

							display: none;
							cursor: not-allowed;

							// border: 1px solid yellow;
						}
					}
				}

				.logo {
					display: flex;
					justify-content: center;
					align-items: center;
					margin-bottom: 50px;
				}
			}

			.stages-box {
				flex: 1;
				animation: enterStage 1s ease 0s 1 normal none;

				.stages {
					display: flex;
					flex-direction: column;
					gap: 1px;

					.stage {
						display: flex;

						@include backgroundImage("../../../images/stages/stage.png");

						width: 200px;
						height: 40px;

						font-size: 1.1rem;
						font-weight: bold;

						padding-left: 60px;
						align-items: center;

						color: #ffb300;
					}

					.stage-15,
					.stage-14,
					.stage-13,
					.stage-12,
					.stage-11,
					.stage-10 {
						padding-left: 55px;
					}

					.stage-1,
					.stage-5,
					.stage-10,
					.stage-15 {
						color: white;
					}

					.stage-active {
						@include backgroundImage("../../../images/stages/stage_active.png");

						color: white;
					}

					.stage-done {
						opacity: 0.3;
					}
				}
			}
		}

		.lower-box {
			flex: 1;

			animation: enterQuestionsAndAnswers 1s ease 0s 1 normal none;

			.questionAndAnswers {
				display: flex;
				flex-direction: column;
				gap: 20px;

				min-width: 913px;

				.question {
					@include backgroundImage("../../../images/questionAndAnswers/question.png");

					height: 110px;

					display: flex;
					justify-content: center;
					align-items: center;

					.question-text {
						width: 55%;
						text-align: center;

						color: white;
						font-size: 1.2rem;

						overflow-wrap: break-word;
						word-break: break-all;
					}
				}

				.answers {
					display: flex;
					flex-direction: column;
					position: relative;

					#questionIndex {
						color: white;
						font-size: 1.5rem;

						position: absolute;
						top: 48%;
						left: 50%;
						transform: translate(-50%, -50%);
					}

					.upper-answers,
					.lower-answers {
						display: flex;
					}

					.answer-box-A,
					.answer-box-C {
						display: flex;
						justify-content: flex-end;
					}

					.answer-box {
						flex: 1;
						display: flex;
						align-items: center;

						height: 80px;

						.answer-btn {
							display: flex;
							justify-content: flex-start;
							padding: 0 50px;
							align-items: center;

							color: white;
							font-size: 1rem;
							margin-top: -5px;

							min-width: 400px;
							min-height: 55px;

							cursor: pointer;
							border: none;

							@include buttonRadius;

							background-color: transparent;

							@include backgroundImage("../../../images/questionAndAnswers/answer.png");

							.answer-option {
								font-weight: bold;
								color: #ffb300;
							}

							&:hover:not(.answer-correct, :disabled) {
								.answer-option {
									color: black;
								}

								@include backgroundImage(
									"../../../images/questionAndAnswers/answer_selected.png"
								);
							}
						}

						.answer-selected {
							@include backgroundImage(
								"../../../images/questionAndAnswers/answer_selected.png"
							);
						}

						.answer-correct {
							@include backgroundImage("../../../images/questionAndAnswers/answer_correct.png");
						}
					}
				}
			}
		}
	}
}

@keyframes timerAnimation {
	0% {
		transform: rotate(0);
	}

	100% {
		transform: rotate(360deg);
	}
}

@keyframes enterStage {
	0% {
		opacity: 0;
		transform: translateX(250px);
	}

	100% {
		opacity: 1;
		transform: translateX(0);
	}
}

@keyframes enterTimerAndExitBtn {
	0% {
		opacity: 0;
		transform: translateX(-250px);
	}

	100% {
		opacity: 1;
		transform: translateX(0);
	}
}

@keyframes enterHints {
	0% {
		opacity: 0;
		transform: translateY(-250px);
	}

	100% {
		opacity: 1;
		transform: translateY(0);
	}
}

@keyframes enterQuestionsAndAnswers {
	0% {
		opacity: 0;
		transform: translateY(250px);
	}

	100% {
		opacity: 1;
		transform: translateY(0);
	}
}

@keyframes hoverHint {
	0%,
	100% {
		transform: translateX(0%);
		transform-origin: 50% 50%;
	}

	15% {
		transform: translateX(-1px) rotate(-6deg);
	}

	30% {
		transform: translateX(1px) rotate(6deg);
	}

	45% {
		transform: translateX(-1px) rotate(-3.6deg);
	}

	60% {
		transform: translateX(1px) rotate(2.4deg);
	}

	75% {
		transform: translateX(-1px) rotate(-1.2deg);
	}
}
